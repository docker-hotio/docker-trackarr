---
kind: pipeline
name: checks

trigger:
  event:
    - push

steps:
- name: shellcheck
  image: koalaman/shellcheck-alpine
  pull: always
  commands:
    - shellcheck --version
    - for file in $(find ./root -type f); do echo $file; shellcheck $file; done;

---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
    build_args:
      - TRACKARR_URL=${TRACKARR_URL_AMD64=https://gitlab.com/cloudb0x/trackarr/uploads/c02643dedb5dfc19fceae8ebf3c254c8/trackarr_v1.8.1_linux_amd64.tar.gz}

depends_on:
  - checks

---
kind: pipeline
name: linux-amd64-test

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

steps:
- name: list-packages
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - apk -vv info|sort
- name: test
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - bash update.sh checkservice

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    DEBUG: yes

depends_on:
  - linux-amd64

---
kind: pipeline
name: linux-arm64

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
    build_args:
      - TRACKARR_URL=${TRACKARR_URL_ARM64=https://gitlab.com/cloudb0x/trackarr/uploads/2295f80b475a04686a093e8f518b2d16/trackarr_v1.8.1_linux_arm64.tar.gz}

depends_on:
  - checks

---
kind: pipeline
name: linux-arm64-test

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - push

steps:
- name: list-packages
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - apk -vv info|sort
- name: test
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - bash update.sh checkservice

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    DEBUG: yes

depends_on:
  - linux-arm64

---
kind: pipeline
name: linux-arm

platform:
  os: linux
  arch: arm

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
    build_args:
      - TRACKARR_URL=${TRACKARR_URL_ARM=https://gitlab.com/cloudb0x/trackarr/uploads/69ed86a8ef3364e12ff58b5c4bbcb4d3/trackarr_v1.8.1_linux_arm.tar.gz}

depends_on:
  - checks

---
kind: pipeline
name: linux-arm-test

platform:
  os: linux
  arch: arm

trigger:
  event:
    - push

steps:
- name: list-packages
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - apk -vv info|sort
- name: test
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - bash update.sh checkservice

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    DEBUG: yes

depends_on:
  - linux-arm

---
kind: pipeline
name: manifest

clone:
  disable: true

trigger:
  event:
    - push

steps:
- name: latest
  when:
    branch:
      - stable
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:latest
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch-commit
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch-version
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${TRACKARR_VERSION=1.8.1}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

depends_on:
  - linux-amd64-test
  - linux-arm64-test
  - linux-arm-test

---
kind: pipeline
name: notify

trigger:
  event:
  - push
  status:
  - success
  - failure

steps:
- name: screenshot
  image: zenika/alpine-chrome:with-puppeteer
  pull: always
  user: root
  environment:
    VERSION_FIELD: ${TRACKARR_VERSION=1.8.1}
  commands:
    - apk add --no-cache curl iputils bash coreutils
    - bash update.sh checkservice
    - bash update.sh screenshot
  failure: ignore

- name: discord
  image: ${DRONE_REPO_OWNER}/base:alpine
  pull: always
  environment:
    DISCORD_ID:
      from_secret: discord_id
    DISCORD_TOKEN:
      from_secret: discord_token
    VERSION_FIELD: ${TRACKARR_VERSION=1.8.1}
  commands:
    - curl -fsSL https://gist.githubusercontent.com/hotio/d490b6447ddde9634475ddacbc85d8c1/raw/discord-build-notify.sh > discord-build-notify.sh
    - bash discord-build-notify.sh

services:
- name: service
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    DEBUG: yes

depends_on:
  - manifest
